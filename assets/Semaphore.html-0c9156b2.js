const e=JSON.parse('{"key":"v-57c59e4c","path":"/zh/language/Java/multithreading/sync-tool/Semaphore.html","title":"信号量","lang":"zh-CN","frontmatter":{"category":["Java"],"tag":["多线程","同步工具类"],"description":"信号量 提示 如何使用信号量来限制并发执行某个接口的线程数？ 信号量是并发编程中的一个重要概念，JUC提供了Semaphore类来实现信号量。信号量用来限制临界区和共享资源的并发访问。使用互斥锁，临界区和共享资源同时只能被一个线程访问；使用信号量，临界区和共享资源同时可以被多个线程访问。因此，信号量也可以看做是一种共享锁，其底层也是基于AQS实现的。","head":[["meta",{"property":"og:url","content":"https://theme-zhang.netlify.app/zh/language/Java/multithreading/sync-tool/Semaphore.html"}],["meta",{"property":"og:site_name","content":"zhang"}],["meta",{"property":"og:title","content":"信号量"}],["meta",{"property":"og:description","content":"信号量 提示 如何使用信号量来限制并发执行某个接口的线程数？ 信号量是并发编程中的一个重要概念，JUC提供了Semaphore类来实现信号量。信号量用来限制临界区和共享资源的并发访问。使用互斥锁，临界区和共享资源同时只能被一个线程访问；使用信号量，临界区和共享资源同时可以被多个线程访问。因此，信号量也可以看做是一种共享锁，其底层也是基于AQS实现的。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-12-09T06:04:07.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"article:tag","content":"多线程"}],["meta",{"property":"article:tag","content":"同步工具类"}],["meta",{"property":"article:modified_time","content":"2022-12-09T06:04:07.000Z"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://theme-zhang.netlify.app/en/language/Java/multithreading/sync-tool/Semaphore.html"}]]},"headers":[{"level":2,"title":"一、信号量的由来","slug":"一、信号量的由来","link":"#一、信号量的由来","children":[]},{"level":2,"title":"二、临界区并发访问限制","slug":"二、临界区并发访问限制","link":"#二、临界区并发访问限制","children":[]},{"level":2,"title":"三、共享资源并发访问限制","slug":"三、共享资源并发访问限制","link":"#三、共享资源并发访问限制","children":[]},{"level":2,"title":"四、信号量的实现原理","slug":"四、信号量的实现原理","link":"#四、信号量的实现原理","children":[]},{"level":2,"title":"五、思考题","slug":"五、思考题","link":"#五、思考题","children":[]}],"git":{"createdTime":1670565847000,"updatedTime":1670565847000,"contributors":[{"name":"zhanglf","email":"454486214@qq.com","commits":1}]},"readingTime":{"minutes":9.56,"words":2868},"filePathRelative":"zh/language/Java/multithreading/sync-tool/Semaphore.md","localizedDate":"2022年12月9日","excerpt":"<h1> <strong>信号量</strong></h1>\\n<div class=\\"custom-container tip\\">\\n<p class=\\"custom-container-title\\">提示</p>\\n<p><strong>如何使用信号量来限制并发执行某个接口的线程数？</strong></p>\\n<p>信号量是并发编程中的一个重要概念，JUC提供了Semaphore类来实现信号量。信号量用来限制临界区和共享资源的并发访问。使用互斥锁，临界区和共享资源同时只能被一个线程访问；使用信号量，临界区和共享资源同时可以被多个线程访问。因此，信号量也可以看做是一种共享锁，其底层也是基于AQS实现的。</p>\\n</div>","autoDesc":true}');export{e as data};
