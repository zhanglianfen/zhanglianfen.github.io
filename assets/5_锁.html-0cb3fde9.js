const e=JSON.parse('{"key":"v-b1b20dae","path":"/zh/basics/MySQL/interview/5_%E9%94%81.html","title":"锁","lang":"zh-CN","frontmatter":{"description":"锁 事务并发访问同一数据资源的情况主要就分为读-读、写-写和读-写三种。 读-读 即并发事务同时访问同一行数据记录。由于两个事务都进行只读操作，不会对记录造成任何影响，因此并发读完全允许。 写-写 即并发事务同时修改同一行数据记录。这种情况下可能导致脏写问题，这是任何情况下都不允许发生的，因此只能通过加锁实现，也就是当一个事务需要对某行记录进行修改时，首先会先给这条记录加锁，如果加锁成功则继续执行，否则就排队等待，事务执行完成或回滚会自动释放锁。 读-写 即一个事务进行读取操作，另一个进行写入操作。这种情况下可能会产生脏读、不可重复读、幻读。最好的方案是读操作利用多版本并发控制（MVCC），写操作进行加锁。","head":[["meta",{"property":"og:url","content":"https://theme-zhang.netlify.app/zh/basics/MySQL/interview/5_%E9%94%81.html"}],["meta",{"property":"og:site_name","content":"zhang"}],["meta",{"property":"og:title","content":"锁"}],["meta",{"property":"og:description","content":"锁 事务并发访问同一数据资源的情况主要就分为读-读、写-写和读-写三种。 读-读 即并发事务同时访问同一行数据记录。由于两个事务都进行只读操作，不会对记录造成任何影响，因此并发读完全允许。 写-写 即并发事务同时修改同一行数据记录。这种情况下可能导致脏写问题，这是任何情况下都不允许发生的，因此只能通过加锁实现，也就是当一个事务需要对某行记录进行修改时，首先会先给这条记录加锁，如果加锁成功则继续执行，否则就排队等待，事务执行完成或回滚会自动释放锁。 读-写 即一个事务进行读取操作，另一个进行写入操作。这种情况下可能会产生脏读、不可重复读、幻读。最好的方案是读操作利用多版本并发控制（MVCC），写操作进行加锁。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-12-09T06:04:07.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"article:modified_time","content":"2022-12-09T06:04:07.000Z"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://theme-zhang.netlify.app/en/basics/MySQL/interview/5_%E9%94%81.html"}]]},"headers":[{"level":2,"title":"锁的分类","slug":"锁的分类","link":"#锁的分类","children":[]},{"level":2,"title":"InnoDB中的表级锁","slug":"innodb中的表级锁","link":"#innodb中的表级锁","children":[]},{"level":2,"title":"InnoDB中的行级锁","slug":"innodb中的行级锁","link":"#innodb中的行级锁","children":[]},{"level":2,"title":"两阶段锁协议（Two-Pahse Locking -- 2PL）","slug":"两阶段锁协议-two-pahse-locking-2pl","link":"#两阶段锁协议-two-pahse-locking-2pl","children":[]}],"git":{"createdTime":1670565847000,"updatedTime":1670565847000,"contributors":[{"name":"zhanglf","email":"454486214@qq.com","commits":1}]},"readingTime":{"minutes":7.89,"words":2367},"filePathRelative":"zh/basics/MySQL/interview/5_锁.md","localizedDate":"2022年12月9日","excerpt":"<h1> 锁</h1>\\n<p>事务并发访问同一数据资源的情况主要就分为<code>读-读</code>、<code>写-写</code>和<code>读-写</code>三种。</p>\\n<ol>\\n<li><code>读-读</code> 即并发事务同时访问同一行数据记录。由于两个事务都进行只读操作，不会对记录造成任何影响，因此并发读完全允许。</li>\\n<li><code>写-写</code> 即并发事务同时修改同一行数据记录。这种情况下可能导致<code>脏写</code>问题，这是任何情况下都不允许发生的，因此只能通过<code>加锁</code>实现，也就是当一个事务需要对某行记录进行修改时，首先会先给这条记录加锁，如果加锁成功则继续执行，否则就排队等待，事务执行完成或回滚会自动释放锁。</li>\\n<li><code>读-写</code> 即一个事务进行读取操作，另一个进行写入操作。这种情况下可能会产生<code>脏读</code>、<code>不可重复读</code>、<code>幻读</code>。最好的方案是<strong>读操作利用多版本并发控制（<code>MVCC</code>），写操作进行加锁</strong>。</li>\\n</ol>","autoDesc":true}');export{e as data};
