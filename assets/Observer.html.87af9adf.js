const e=JSON.parse('{"key":"v-12b82628","path":"/zh/basics/design-patterns/behavioral-patterns/Observer.html","title":"观察者模式","lang":"zh-CN","frontmatter":{"category":["行为型设计模式"],"description":"我们常把 23 种经典的设计模式分为三类：创建型、结构型、行为型。前面我们已经学习了创建型和结构型，从今天起，我们开始学习行为型设计模式。我们知道，创建型设计模式主要解决“对象的创建”问题，结构型设计模式主要解决“类或对象的组合或组装”问题，那行为型设计模式主要解决的就是“类或对象之间的交互”问题。 行为型设计模式比较多，有 11 个，几乎占了 23 ...","head":[["meta",{"property":"og:url","content":"https://theme-zhang.netlify.app/zh/basics/design-patterns/behavioral-patterns/Observer.html"}],["meta",{"property":"og:site_name","content":"zhang"}],["meta",{"property":"og:title","content":"观察者模式"}],["meta",{"property":"og:description","content":"我们常把 23 种经典的设计模式分为三类：创建型、结构型、行为型。前面我们已经学习了创建型和结构型，从今天起，我们开始学习行为型设计模式。我们知道，创建型设计模式主要解决“对象的创建”问题，结构型设计模式主要解决“类或对象的组合或组装”问题，那行为型设计模式主要解决的就是“类或对象之间的交互”问题。 行为型设计模式比较多，有 11 个，几乎占了 23 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-12-09T06:04:07.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"article:modified_time","content":"2022-12-09T06:04:07.000Z"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://theme-zhang.netlify.app/en/basics/design-patterns/behavioral-patterns/Observer.html"}]]},"excerpt":"","headers":[{"level":2,"title":"原理及应用场景剖析","slug":"原理及应用场景剖析","link":"#原理及应用场景剖析","children":[]},{"level":2,"title":"基于不同应用场景的不同实现方式","slug":"基于不同应用场景的不同实现方式","link":"#基于不同应用场景的不同实现方式","children":[]},{"level":2,"title":"异步非阻塞观察者模式的简易实现","slug":"异步非阻塞观察者模式的简易实现","link":"#异步非阻塞观察者模式的简易实现","children":[]},{"level":2,"title":"EventBus 框架功能需求介绍","slug":"eventbus-框架功能需求介绍","link":"#eventbus-框架功能需求介绍","children":[]},{"level":2,"title":"手把手实现一个 EventBus 框架","slug":"手把手实现一个-eventbus-框架","link":"#手把手实现一个-eventbus-框架","children":[{"level":3,"title":"1.Subscribe","slug":"_1-subscribe","link":"#_1-subscribe","children":[]},{"level":3,"title":"2.ObserverAction","slug":"_2-observeraction","link":"#_2-observeraction","children":[]},{"level":3,"title":"3.ObserverRegistry","slug":"_3-observerregistry","link":"#_3-observerregistry","children":[]},{"level":3,"title":"4.EventBus","slug":"_4-eventbus","link":"#_4-eventbus","children":[]},{"level":3,"title":"5.AsyncEventBus","slug":"_5-asynceventbus","link":"#_5-asynceventbus","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]},{"level":2,"title":"思考题","slug":"思考题","link":"#思考题","children":[]}],"git":{"createdTime":1670565847000,"updatedTime":1670565847000,"contributors":[{"name":"zhanglf","email":"454486214@qq.com","commits":1}]},"readingTime":{"minutes":23.66,"words":7097},"autoDesc":true,"localizedDate":"2022年12月9日","filePathRelative":"zh/basics/design-patterns/behavioral-patterns/Observer.md"}');export{e as data};
