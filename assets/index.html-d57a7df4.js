const t=JSON.parse('{"key":"v-48a0903b","path":"/zh/basics/design-patterns/structural-patterns/","title":"概述","lang":"zh-CN","frontmatter":{"description":"概述 常用： 代理模式 桥接模式 装饰者模式 适配器模式","head":[["meta",{"property":"og:url","content":"https://theme-zhang.netlify.app/zh/basics/design-patterns/structural-patterns/"}],["meta",{"property":"og:site_name","content":"zhang"}],["meta",{"property":"og:title","content":"概述"}],["meta",{"property":"og:description","content":"概述 常用： 代理模式 桥接模式 装饰者模式 适配器模式"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-12-09T06:04:07.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"article:modified_time","content":"2022-12-09T06:04:07.000Z"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://theme-zhang.netlify.app/en/basics/design-patterns/structural-patterns/"}]]},"headers":[],"git":{"createdTime":1670565847000,"updatedTime":1670565847000,"contributors":[{"name":"zhanglf","email":"454486214@qq.com","commits":1}]},"readingTime":{"minutes":0.14,"words":41},"filePathRelative":"zh/basics/design-patterns/structural-patterns/README.md","localizedDate":"2022年12月9日","excerpt":"<h1> 概述</h1>\\n<p><strong>常用：</strong></p>\\n<ul class=\\"task-list-container\\">\\n<li class=\\"task-list-item\\"><input type=\\"checkbox\\" class=\\"task-list-item-checkbox\\" id=\\"task-item-0\\" checked=\\"checked\\" disabled=\\"disabled\\"><label class=\\"task-list-item-label\\" for=\\"task-item-0\\"> 代理模式</label></li>\\n<li class=\\"task-list-item\\"><input type=\\"checkbox\\" class=\\"task-list-item-checkbox\\" id=\\"task-item-1\\" checked=\\"checked\\" disabled=\\"disabled\\"><label class=\\"task-list-item-label\\" for=\\"task-item-1\\"> 桥接模式</label></li>\\n<li class=\\"task-list-item\\"><input type=\\"checkbox\\" class=\\"task-list-item-checkbox\\" id=\\"task-item-2\\" checked=\\"checked\\" disabled=\\"disabled\\"><label class=\\"task-list-item-label\\" for=\\"task-item-2\\"> 装饰者模式</label></li>\\n<li class=\\"task-list-item\\"><input type=\\"checkbox\\" class=\\"task-list-item-checkbox\\" id=\\"task-item-3\\" checked=\\"checked\\" disabled=\\"disabled\\"><label class=\\"task-list-item-label\\" for=\\"task-item-3\\"> 适配器模式</label></li>\\n</ul>","autoDesc":true}');export{t as data};
