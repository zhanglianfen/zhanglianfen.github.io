const e=JSON.parse('{"key":"v-5843f569","path":"/zh/basics/design-patterns/behavioral-patterns/Command.html","title":"命令模式","lang":"zh-CN","frontmatter":{"category":["行为型设计模式"],"description":"命令模式 设计模式模块已经接近尾声了，现在我们只剩下 3 个模式还没有学习，它们分别是：命令模式、解释器模式、中介模式。这 3 个模式使用频率低、理解难度大，只在非常特定的应用场景下才会用到，所以，不是我们学习的重点，你只需要稍微了解，见了能认识就可以了。 今天呢，我们来学习其中的命令模式。在学习这个模式的过程中，你可能会遇到的最大的疑惑是，感觉命令模式没啥用，是一种过度设计，有更加简单的设计思路可以替代。所以，我今天讲解的重点是这个模式的设计意图，带你搞清楚到底什么情况下才真正需要使用它。 命令模式的原理解读","head":[["meta",{"property":"og:url","content":"https://theme-zhang.netlify.app/zh/basics/design-patterns/behavioral-patterns/Command.html"}],["meta",{"property":"og:site_name","content":"zhang"}],["meta",{"property":"og:title","content":"命令模式"}],["meta",{"property":"og:description","content":"命令模式 设计模式模块已经接近尾声了，现在我们只剩下 3 个模式还没有学习，它们分别是：命令模式、解释器模式、中介模式。这 3 个模式使用频率低、理解难度大，只在非常特定的应用场景下才会用到，所以，不是我们学习的重点，你只需要稍微了解，见了能认识就可以了。 今天呢，我们来学习其中的命令模式。在学习这个模式的过程中，你可能会遇到的最大的疑惑是，感觉命令模式没啥用，是一种过度设计，有更加简单的设计思路可以替代。所以，我今天讲解的重点是这个模式的设计意图，带你搞清楚到底什么情况下才真正需要使用它。 命令模式的原理解读"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-12-09T06:04:07.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"article:modified_time","content":"2022-12-09T06:04:07.000Z"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://theme-zhang.netlify.app/en/basics/design-patterns/behavioral-patterns/Command.html"}]]},"headers":[{"level":2,"title":"命令模式的原理解读","slug":"命令模式的原理解读","link":"#命令模式的原理解读","children":[]},{"level":2,"title":"命令模式的实战讲解","slug":"命令模式的实战讲解","link":"#命令模式的实战讲解","children":[]},{"level":2,"title":"命令模式 VS 策略模式","slug":"命令模式-vs-策略模式","link":"#命令模式-vs-策略模式","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1670565847000,"updatedTime":1670565847000,"contributors":[{"name":"zhanglf","email":"454486214@qq.com","commits":1}]},"readingTime":{"minutes":9,"words":2699},"filePathRelative":"zh/basics/design-patterns/behavioral-patterns/Command.md","localizedDate":"2022年12月9日","excerpt":"<h1> 命令模式</h1>\\n<p>设计模式模块已经接近尾声了，现在我们只剩下 3 个模式还没有学习，它们分别是：<strong>命令模式、解释器模式、中介模式。这 3 个模式使用频率低、理解难度大，只在非常特定的应用场景下才会用到，所以，不是我们学习的重点，你只需要稍微了解，见了能认识就可以了。</strong></p>\\n<p>今天呢，我们来学习其中的命令模式。在学习这个模式的过程中，你可能会遇到的最大的疑惑是，感觉命令模式没啥用，是一种过度设计，有更加简单的设计思路可以替代。所以，我今天讲解的重点是这个模式的设计意图，带你搞清楚到底什么情况下才真正需要使用它。</p>\\n<h2> 命令模式的原理解读</h2>","autoDesc":true}');export{e as data};
