const t=JSON.parse('{"key":"v-7a3ba734","path":"/zh/basics/MySQL/interview/4_%E4%BA%8B%E5%8A%A1.html","title":"事务","lang":"zh-CN","frontmatter":{"description":"事务 事务 在维基百科中，对事务的定义是：事务是数据库管理系统(DBMS)执行过程中的一个逻辑单位，由一个有限的数据库操作序列构成。 事务的四大特性 事务包含四大特性，即原子性（Atomicity）、一致性（Consistency）、隔离性（Isolation）**和**持久性（Durability）(ACID)。 原子性（Atomicity） 原子性是指对数据库的一系列操作，要么全部成功，要么全部失败，不可能出现部分成功的情况。以转账场景为例，一个账户的余额减少，另一个账户的余额增加，这两个操作一定是同时成功或者同时失败的。 一致性（Consistency） 一致性是指数据库的完整性约束没有被破坏，在事务执行前后都是合法的数据状态。这里的一致可以表示数据库自身的约束没有被破坏，比如某些字段的唯一性约束、字段长度约束等等；还可以表示各种实际场景下的业务约束，比如上面转账操作，一个账户减少的金额和另一个账户增加的金额一定是一样的。 隔离性（Isolation） 隔离性指的是多个事务彼此之间是完全隔离、互不干扰的。隔离性的最终目的也是为了保证一致性。 持久性（Durability） 持久性是指只要事务提交成功，那么对数据库做的修改就被永久保存下来了，不可能因为任何原因再回到原来的状态。","head":[["meta",{"property":"og:url","content":"https://theme-zhang.netlify.app/zh/basics/MySQL/interview/4_%E4%BA%8B%E5%8A%A1.html"}],["meta",{"property":"og:site_name","content":"zhang"}],["meta",{"property":"og:title","content":"事务"}],["meta",{"property":"og:description","content":"事务 事务 在维基百科中，对事务的定义是：事务是数据库管理系统(DBMS)执行过程中的一个逻辑单位，由一个有限的数据库操作序列构成。 事务的四大特性 事务包含四大特性，即原子性（Atomicity）、一致性（Consistency）、隔离性（Isolation）**和**持久性（Durability）(ACID)。 原子性（Atomicity） 原子性是指对数据库的一系列操作，要么全部成功，要么全部失败，不可能出现部分成功的情况。以转账场景为例，一个账户的余额减少，另一个账户的余额增加，这两个操作一定是同时成功或者同时失败的。 一致性（Consistency） 一致性是指数据库的完整性约束没有被破坏，在事务执行前后都是合法的数据状态。这里的一致可以表示数据库自身的约束没有被破坏，比如某些字段的唯一性约束、字段长度约束等等；还可以表示各种实际场景下的业务约束，比如上面转账操作，一个账户减少的金额和另一个账户增加的金额一定是一样的。 隔离性（Isolation） 隔离性指的是多个事务彼此之间是完全隔离、互不干扰的。隔离性的最终目的也是为了保证一致性。 持久性（Durability） 持久性是指只要事务提交成功，那么对数据库做的修改就被永久保存下来了，不可能因为任何原因再回到原来的状态。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-12-09T06:04:07.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"article:modified_time","content":"2022-12-09T06:04:07.000Z"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://theme-zhang.netlify.app/en/basics/MySQL/interview/4_%E4%BA%8B%E5%8A%A1.html"}]]},"headers":[{"level":2,"title":"事务","slug":"事务-1","link":"#事务-1","children":[{"level":3,"title":"事务的四大特性","slug":"事务的四大特性","link":"#事务的四大特性","children":[]}]},{"level":2,"title":"脏读、不可重复读、幻读","slug":"脏读、不可重复读、幻读","link":"#脏读、不可重复读、幻读","children":[{"level":3,"title":"脏写（Dirty Write）","slug":"脏写-dirty-write","link":"#脏写-dirty-write","children":[]},{"level":3,"title":"脏读（Dirty Read）","slug":"脏读-dirty-read","link":"#脏读-dirty-read","children":[]},{"level":3,"title":"不可重复读（Non-Repeatable Read）","slug":"不可重复读-non-repeatable-read","link":"#不可重复读-non-repeatable-read","children":[]},{"level":3,"title":"幻读（Phantom）","slug":"幻读-phantom","link":"#幻读-phantom","children":[]}]},{"level":2,"title":"隔离级别","slug":"隔离级别","link":"#隔离级别","children":[]},{"level":2,"title":"MVCC","slug":"mvcc","link":"#mvcc","children":[{"level":3,"title":"版本链","slug":"版本链","link":"#版本链","children":[]}]},{"level":2,"title":"ReadView","slug":"readview","link":"#readview","children":[]}],"git":{"createdTime":1670565847000,"updatedTime":1670565847000,"contributors":[{"name":"zhanglf","email":"454486214@qq.com","commits":1}]},"readingTime":{"minutes":8.33,"words":2499},"filePathRelative":"zh/basics/MySQL/interview/4_事务.md","localizedDate":"2022年12月9日","excerpt":"<h1> 事务</h1>\\n<h2> 事务</h2>\\n<p>在维基百科中，对事务的定义是：<strong>事务是数据库管理系统(DBMS)执行过程中的一个逻辑单位，由一个有限的数据库操作序列构成</strong>。</p>\\n<h3> 事务的四大特性</h3>\\n<p>事务包含四大特性，即<strong>原子性（Atomicity）</strong>、<strong>一致性（Consistency）</strong>、<strong>隔离性（Isolation）**和**持久性（Durability）</strong>(ACID)。</p>\\n<ol>\\n<li>原子性（Atomicity） <strong>原子性是指对数据库的一系列操作，要么全部成功，要么全部失败，不可能出现部分成功的情况</strong>。以转账场景为例，一个账户的余额减少，另一个账户的余额增加，这两个操作一定是同时成功或者同时失败的。</li>\\n<li>一致性（Consistency） <strong>一致性是指数据库的完整性约束没有被破坏，在事务执行前后都是合法的数据状态</strong>。这里的一致可以表示数据库自身的约束没有被破坏，比如某些字段的唯一性约束、字段长度约束等等；还可以表示各种实际场景下的业务约束，比如上面转账操作，一个账户减少的金额和另一个账户增加的金额一定是一样的。</li>\\n<li>隔离性（Isolation） <strong>隔离性指的是多个事务彼此之间是完全隔离、互不干扰的</strong>。隔离性的最终目的也是为了保证一致性。</li>\\n<li>持久性（Durability） <strong>持久性是指只要事务提交成功，那么对数据库做的修改就被永久保存下来了，不可能因为任何原因再回到原来的状态</strong>。</li>\\n</ol>","autoDesc":true}');export{t as data};
