const e=JSON.parse('{"key":"v-2b5a1056","path":"/zh/basics/design-patterns/structural-patterns/bridge.html","title":"桥接模式","lang":"zh-CN","frontmatter":{"category":["结构型设计模式"],"description":"代理模式：它在不改变原始类（或者叫被代理类）代码的情况下，通过引入代理类来给原始类附加功能。代理模式在平时的开发经常被用到，常用在业务系统中开发一些非功能性需求，比如：监控、统计、鉴权、限流、事务、幂等、日志。 桥接模式的代码实现非常简单，但是理解起来稍微有点难度，并且应用场景也比较局限，所以，相当于代理模式来说，桥接模式在实际的项目中并没有那么常用，...","head":[["meta",{"property":"og:url","content":"https://theme-zhang.netlify.app/zh/basics/design-patterns/structural-patterns/bridge.html"}],["meta",{"property":"og:site_name","content":"zhang"}],["meta",{"property":"og:title","content":"桥接模式"}],["meta",{"property":"og:description","content":"代理模式：它在不改变原始类（或者叫被代理类）代码的情况下，通过引入代理类来给原始类附加功能。代理模式在平时的开发经常被用到，常用在业务系统中开发一些非功能性需求，比如：监控、统计、鉴权、限流、事务、幂等、日志。 桥接模式的代码实现非常简单，但是理解起来稍微有点难度，并且应用场景也比较局限，所以，相当于代理模式来说，桥接模式在实际的项目中并没有那么常用，..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-12-09T06:04:07.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"article:modified_time","content":"2022-12-09T06:04:07.000Z"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://theme-zhang.netlify.app/en/basics/design-patterns/structural-patterns/bridge.html"}]]},"excerpt":"","headers":[{"level":2,"title":"桥接模式的原理解析","slug":"桥接模式的原理解析","link":"#桥接模式的原理解析","children":[]},{"level":2,"title":"桥接模式的应用举例","slug":"桥接模式的应用举例","link":"#桥接模式的应用举例","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]},{"level":2,"title":"思考题","slug":"思考题","link":"#思考题","children":[]}],"git":{"createdTime":1670565847000,"updatedTime":1670565847000,"contributors":[{"name":"zhanglf","email":"454486214@qq.com","commits":1}]},"readingTime":{"minutes":9.65,"words":2894},"autoDesc":true,"localizedDate":"2022年12月9日","filePathRelative":"zh/basics/design-patterns/structural-patterns/bridge.md"}');export{e as data};
