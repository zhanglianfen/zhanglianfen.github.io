const e=JSON.parse('{"key":"v-e9a713f8","path":"/zh/basics/OOP/%E5%A4%9A%E7%94%A8%E7%BB%84%E5%90%88%E5%B0%91%E7%94%A8%E7%BB%A7%E6%89%BF.html","title":"为何说要多用组合少用继承？如何决定该用组合还是继承？","lang":"zh-CN","frontmatter":{"category":["面向对象"],"description":"为何说要多用组合少用继承？如何决定该用组合还是继承？ 在面向对象编程中，有一条非常经典的设计原则，那就是：组合优于继承，多用组合少用继承。为什么不推荐使用继承？组合相比继承有哪些优势？如何判断该用组合还是继承？今天，我们就围绕着这三个问题，来详细讲解一下这条设计原则。 为什么不推荐使用继承？ 继承是面向对象的四大特性之一，用来表示类之间的 is-a 关系，可以解决代码复用的问题。虽然继承有诸多作用，但继承层次过深、过复杂，也会影响到代码的可维护性。所以，对于是否应该在项目中使用继承，网上有很多争议。很多人觉得继承是一种反模式，应该尽量少用，甚至不用。为什么会有这样的争议？我们通过一个例子来解释一下。","head":[["meta",{"property":"og:url","content":"https://theme-zhang.netlify.app/zh/basics/OOP/%E5%A4%9A%E7%94%A8%E7%BB%84%E5%90%88%E5%B0%91%E7%94%A8%E7%BB%A7%E6%89%BF.html"}],["meta",{"property":"og:site_name","content":"zhang"}],["meta",{"property":"og:title","content":"为何说要多用组合少用继承？如何决定该用组合还是继承？"}],["meta",{"property":"og:description","content":"为何说要多用组合少用继承？如何决定该用组合还是继承？ 在面向对象编程中，有一条非常经典的设计原则，那就是：组合优于继承，多用组合少用继承。为什么不推荐使用继承？组合相比继承有哪些优势？如何判断该用组合还是继承？今天，我们就围绕着这三个问题，来详细讲解一下这条设计原则。 为什么不推荐使用继承？ 继承是面向对象的四大特性之一，用来表示类之间的 is-a 关系，可以解决代码复用的问题。虽然继承有诸多作用，但继承层次过深、过复杂，也会影响到代码的可维护性。所以，对于是否应该在项目中使用继承，网上有很多争议。很多人觉得继承是一种反模式，应该尽量少用，甚至不用。为什么会有这样的争议？我们通过一个例子来解释一下。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-12-09T06:04:07.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"article:modified_time","content":"2022-12-09T06:04:07.000Z"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://theme-zhang.netlify.app/en/basics/OOP/%E5%A4%9A%E7%94%A8%E7%BB%84%E5%90%88%E5%B0%91%E7%94%A8%E7%BB%A7%E6%89%BF.html"}]]},"headers":[{"level":2,"title":"为什么不推荐使用继承？","slug":"为什么不推荐使用继承","link":"#为什么不推荐使用继承","children":[]},{"level":2,"title":"组合相比继承有哪些优势？","slug":"组合相比继承有哪些优势","link":"#组合相比继承有哪些优势","children":[]},{"level":2,"title":"如何判断该用组合还是继承？","slug":"如何判断该用组合还是继承","link":"#如何判断该用组合还是继承","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]},{"level":2,"title":"课堂讨论","slug":"课堂讨论","link":"#课堂讨论","children":[]}],"git":{"createdTime":1670565847000,"updatedTime":1670565847000,"contributors":[{"name":"zhanglf","email":"454486214@qq.com","commits":1}]},"readingTime":{"minutes":11.11,"words":3334},"filePathRelative":"zh/basics/OOP/多用组合少用继承.md","localizedDate":"2022年12月9日","excerpt":"<h1> 为何说要多用组合少用继承？如何决定该用组合还是继承？</h1>\\n<p>在面向对象编程中，有一条非常经典的设计原则，那就是：组合优于继承，多用组合少用继承。为什么不推荐使用继承？组合相比继承有哪些优势？如何判断该用组合还是继承？今天，我们就围绕着这三个问题，来详细讲解一下这条设计原则。</p>\\n<h2> 为什么不推荐使用继承？</h2>\\n<p>继承是面向对象的四大特性之一，用来表示类之间的 is-a 关系，可以解决代码复用的问题。虽然继承有诸多作用，但继承层次过深、过复杂，也会影响到代码的可维护性。所以，对于是否应该在项目中使用继承，网上有很多争议。很多人觉得继承是一种反模式，应该尽量少用，甚至不用。为什么会有这样的争议？我们通过一个例子来解释一下。</p>","autoDesc":true}');export{e as data};
