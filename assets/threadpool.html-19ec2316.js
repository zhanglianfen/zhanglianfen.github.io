const e=JSON.parse('{"key":"v-dfe3798c","path":"/zh/language/Java/multithreading/thread-manage/threadpool.html","title":"线程池","lang":"zh-CN","frontmatter":{"category":["Java"],"tag":["多线程"],"description":"线程池 提示 线程池开多大最合适？为什么Redis单线程执行命令？ 虽然在平时的业务开发中，我们很少直接使用线程池，但是，在开发中所用到的很多框架、系统中，比如Tomcat、Dubbo RPC等，都离不开线程池。可以这么说，只要用到线程的地方，线程的创建、管理基本上都是由线程池负责的。 我们在使用这些框架、系统的时候，需要对线程池参数做设置。线程池参数设置的合理性，特别是线程池的大小，直接影响了硬件的利用率和系统的性能，那么，线程池到底开多大才合适呢？有什么理论依据吗？带着这个问题，我们来学习今天的内容：线程池。","head":[["meta",{"property":"og:url","content":"https://theme-zhang.netlify.app/zh/language/Java/multithreading/thread-manage/threadpool.html"}],["meta",{"property":"og:site_name","content":"zhang"}],["meta",{"property":"og:title","content":"线程池"}],["meta",{"property":"og:description","content":"线程池 提示 线程池开多大最合适？为什么Redis单线程执行命令？ 虽然在平时的业务开发中，我们很少直接使用线程池，但是，在开发中所用到的很多框架、系统中，比如Tomcat、Dubbo RPC等，都离不开线程池。可以这么说，只要用到线程的地方，线程的创建、管理基本上都是由线程池负责的。 我们在使用这些框架、系统的时候，需要对线程池参数做设置。线程池参数设置的合理性，特别是线程池的大小，直接影响了硬件的利用率和系统的性能，那么，线程池到底开多大才合适呢？有什么理论依据吗？带着这个问题，我们来学习今天的内容：线程池。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-12-09T06:04:07.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"article:tag","content":"多线程"}],["meta",{"property":"article:modified_time","content":"2022-12-09T06:04:07.000Z"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://theme-zhang.netlify.app/en/language/Java/multithreading/thread-manage/threadpool.html"}]]},"headers":[{"level":2,"title":"一、线程池的简介","slug":"一、线程池的简介","link":"#一、线程池的简介","children":[]},{"level":2,"title":"二、线程池的创建","slug":"二、线程池的创建","link":"#二、线程池的创建","children":[]},{"level":2,"title":"三、线程池的执行","slug":"三、线程池的执行","link":"#三、线程池的执行","children":[]},{"level":2,"title":"四、线程池的关闭","slug":"四、线程池的关闭","link":"#四、线程池的关闭","children":[]},{"level":2,"title":"五、线程池的配置","slug":"五、线程池的配置","link":"#五、线程池的配置","children":[]},{"level":2,"title":"六、课后思考题","slug":"六、课后思考题","link":"#六、课后思考题","children":[]}],"git":{"createdTime":1670565847000,"updatedTime":1670565847000,"contributors":[{"name":"zhanglf","email":"454486214@qq.com","commits":1}]},"readingTime":{"minutes":12.27,"words":3682},"filePathRelative":"zh/language/Java/multithreading/thread-manage/threadpool.md","localizedDate":"2022年12月9日","excerpt":"<h1> 线程池</h1>\\n<div class=\\"custom-container tip\\">\\n<p class=\\"custom-container-title\\">提示</p>\\n<p><strong>线程池开多大最合适？为什么Redis单线程执行命令？</strong></p>\\n<p>虽然在平时的业务开发中，我们很少直接使用线程池，但是，在开发中所用到的很多框架、系统中，比如Tomcat、Dubbo RPC等，都离不开线程池。可以这么说，只要用到线程的地方，线程的创建、管理基本上都是由线程池负责的。</p>\\n<p>我们在使用这些框架、系统的时候，需要对线程池参数做设置。线程池参数设置的合理性，特别是线程池的大小，直接影响了硬件的利用率和系统的性能，那么，线程池到底开多大才合适呢？有什么理论依据吗？带着这个问题，我们来学习今天的内容：线程池。</p>\\n</div>","autoDesc":true}');export{e as data};
