const e=JSON.parse('{"key":"v-45cfbac5","path":"/zh/basics/design-patterns/structural-patterns/Adapter.html","title":"适配器模式","lang":"zh-CN","frontmatter":{"category":["结构型设计模式"],"description":"前面几节课我们学习了代理模式、桥接模式、装饰器模式，今天，我们再来学习一个比较常用的结构型模式：适配器模式。这个模式相对来说还是比较简单、好理解的，应用场景也很具体，总体上来讲比较好掌握。 关于适配器模式，今天我们主要学习它的两种实现方式，类适配器和对象适配器，以及 5 种常见的应用场景。同时，我还会通过剖析 slf4j 日志框架，来给你展示这个模式在...","head":[["meta",{"property":"og:url","content":"https://theme-zhang.netlify.app/zh/basics/design-patterns/structural-patterns/Adapter.html"}],["meta",{"property":"og:site_name","content":"zhang"}],["meta",{"property":"og:title","content":"适配器模式"}],["meta",{"property":"og:description","content":"前面几节课我们学习了代理模式、桥接模式、装饰器模式，今天，我们再来学习一个比较常用的结构型模式：适配器模式。这个模式相对来说还是比较简单、好理解的，应用场景也很具体，总体上来讲比较好掌握。 关于适配器模式，今天我们主要学习它的两种实现方式，类适配器和对象适配器，以及 5 种常见的应用场景。同时，我还会通过剖析 slf4j 日志框架，来给你展示这个模式在..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-12-09T06:04:07.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"article:modified_time","content":"2022-12-09T06:04:07.000Z"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://theme-zhang.netlify.app/en/basics/design-patterns/structural-patterns/Adapter.html"}]]},"excerpt":"","headers":[{"level":2,"title":"适配器模式的原理和实现","slug":"适配器模式的原理和实现","link":"#适配器模式的原理和实现","children":[]},{"level":2,"title":"适配器模式应用场景总结","slug":"适配器模式应用场景总结","link":"#适配器模式应用场景总结","children":[{"level":3,"title":"1. 封装有缺陷的接口设计","slug":"_1-封装有缺陷的接口设计","link":"#_1-封装有缺陷的接口设计","children":[]},{"level":3,"title":"2. 统一多个类的接口设计","slug":"_2-统一多个类的接口设计","link":"#_2-统一多个类的接口设计","children":[]},{"level":3,"title":"3. 替换依赖的外部系统","slug":"_3-替换依赖的外部系统","link":"#_3-替换依赖的外部系统","children":[]},{"level":3,"title":"4. 兼容老版本接口","slug":"_4-兼容老版本接口","link":"#_4-兼容老版本接口","children":[]},{"level":3,"title":"5. 适配不同格式的数据","slug":"_5-适配不同格式的数据","link":"#_5-适配不同格式的数据","children":[]}]},{"level":2,"title":"剖析适配器模式在 Java 日志中的应用","slug":"剖析适配器模式在-java-日志中的应用","link":"#剖析适配器模式在-java-日志中的应用","children":[]},{"level":2,"title":"代理、桥接、装饰器、适配器 4 种设计模式的区别","slug":"代理、桥接、装饰器、适配器-4-种设计模式的区别","link":"#代理、桥接、装饰器、适配器-4-种设计模式的区别","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]},{"level":2,"title":"思考题","slug":"思考题","link":"#思考题","children":[]}],"git":{"createdTime":1670565847000,"updatedTime":1670565847000,"contributors":[{"name":"zhanglf","email":"454486214@qq.com","commits":1}]},"readingTime":{"minutes":15.19,"words":4557},"autoDesc":true,"localizedDate":"2022年12月9日","filePathRelative":"zh/basics/design-patterns/structural-patterns/Adapter.md"}');export{e as data};
