const e=JSON.parse('{"key":"v-4a73a7e5","path":"/zh/basics/OOP/%E5%B0%81%E8%A3%85-%E6%8A%BD%E8%B1%A1-%E7%BB%A7%E6%89%BF-%E5%A4%9A%E6%80%81.html","title":"封装、抽象、继承、多态分别可以解决哪些编程问题？","lang":"zh-CN","frontmatter":{"category":["面向对象"],"description":"封装、抽象、继承、多态分别可以解决哪些编程问题？ 上一节课，我简单介绍了面向对象的一些基本概念和知识点，比如，什么是面向对象编程，什么是面向对象编程语言等等。其中，我们还提到，理解面向对象编程及面向对象编程语言的关键就是理解其四大特性：封装、抽象、继承、多态。不过，对于这四大特性，光知道它们的定义是不够的，我们还要知道每个特性存在的意义和目的，以及它们能解决哪些编程问题。所以，今天我就花一节课的时间，针对每种特性，结合实际的代码，带你将这些问题搞清楚。 这里我要强调一下，对于这四大特性，尽管大部分面向对象编程语言都提供了相应的语法机制来支持，但不同的编程语言实现这四大特性的语法机制可能会有所不同。所以，今天，我们在讲解四大特性的时候，并不与具体某种编程语言的特定语法相挂钩，同时，也希望你不要局限在你自己熟悉的编程语言的语法思维框架里。","head":[["meta",{"property":"og:url","content":"https://theme-zhang.netlify.app/zh/basics/OOP/%E5%B0%81%E8%A3%85-%E6%8A%BD%E8%B1%A1-%E7%BB%A7%E6%89%BF-%E5%A4%9A%E6%80%81.html"}],["meta",{"property":"og:site_name","content":"zhang"}],["meta",{"property":"og:title","content":"封装、抽象、继承、多态分别可以解决哪些编程问题？"}],["meta",{"property":"og:description","content":"封装、抽象、继承、多态分别可以解决哪些编程问题？ 上一节课，我简单介绍了面向对象的一些基本概念和知识点，比如，什么是面向对象编程，什么是面向对象编程语言等等。其中，我们还提到，理解面向对象编程及面向对象编程语言的关键就是理解其四大特性：封装、抽象、继承、多态。不过，对于这四大特性，光知道它们的定义是不够的，我们还要知道每个特性存在的意义和目的，以及它们能解决哪些编程问题。所以，今天我就花一节课的时间，针对每种特性，结合实际的代码，带你将这些问题搞清楚。 这里我要强调一下，对于这四大特性，尽管大部分面向对象编程语言都提供了相应的语法机制来支持，但不同的编程语言实现这四大特性的语法机制可能会有所不同。所以，今天，我们在讲解四大特性的时候，并不与具体某种编程语言的特定语法相挂钩，同时，也希望你不要局限在你自己熟悉的编程语言的语法思维框架里。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-12-09T06:04:07.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"article:modified_time","content":"2022-12-09T06:04:07.000Z"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://theme-zhang.netlify.app/en/basics/OOP/%E5%B0%81%E8%A3%85-%E6%8A%BD%E8%B1%A1-%E7%BB%A7%E6%89%BF-%E5%A4%9A%E6%80%81.html"}]]},"headers":[{"level":2,"title":"封装（Encapsulation）","slug":"封装-encapsulation","link":"#封装-encapsulation","children":[]},{"level":2,"title":"抽象（Abstraction）","slug":"抽象-abstraction","link":"#抽象-abstraction","children":[]},{"level":2,"title":"继承（Inheritance）","slug":"继承-inheritance","link":"#继承-inheritance","children":[]},{"level":2,"title":"多态（Polymorphism）","slug":"多态-polymorphism","link":"#多态-polymorphism","children":[]},{"level":2,"title":"重点回顾","slug":"重点回顾","link":"#重点回顾","children":[]}],"git":{"createdTime":1670565847000,"updatedTime":1670565847000,"contributors":[{"name":"zhanglf","email":"454486214@qq.com","commits":1}]},"readingTime":{"minutes":20.54,"words":6163},"filePathRelative":"zh/basics/OOP/封装-抽象-继承-多态.md","localizedDate":"2022年12月9日","excerpt":"<h1> 封装、抽象、继承、多态分别可以解决哪些编程问题？</h1>\\n<p>上一节课，我简单介绍了面向对象的一些基本概念和知识点，比如，什么是面向对象编程，什么是面向对象编程语言等等。其中，我们还提到，理解面向对象编程及面向对象编程语言的关键就是理解其四大特性：封装、抽象、继承、多态。不过，对于这四大特性，光知道它们的定义是不够的，我们还要知道每个特性存在的意义和目的，以及它们能解决哪些编程问题。所以，今天我就花一节课的时间，针对每种特性，结合实际的代码，带你将这些问题搞清楚。</p>\\n<p>这里我要强调一下，对于这四大特性，尽管大部分面向对象编程语言都提供了相应的语法机制来支持，但不同的编程语言实现这四大特性的语法机制可能会有所不同。所以，今天，我们在讲解四大特性的时候，并不与具体某种编程语言的特定语法相挂钩，同时，也希望你不要局限在你自己熟悉的编程语言的语法思维框架里。</p>","autoDesc":true}');export{e as data};
