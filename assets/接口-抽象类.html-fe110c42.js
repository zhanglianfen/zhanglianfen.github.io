const e=JSON.parse('{"key":"v-dcd7786a","path":"/zh/basics/OOP/%E6%8E%A5%E5%8F%A3-%E6%8A%BD%E8%B1%A1%E7%B1%BB.html","title":"接口vs抽象类的区别？如何用普通的类模拟抽象类和接口？","lang":"zh-CN","frontmatter":{"category":["面向对象"],"description":"接口vs抽象类的区别？如何用普通的类模拟抽象类和接口？ 在面向对象编程中，抽象类和接口是两个经常被用到的语法概念，是面向对象四大特性，以及很多设计模式、设计思想、设计原则编程实现的基础。比如，我们可以使用接口来实现面向对象的抽象特性、多态特性和基于接口而非实现的设计原则，使用抽象类来实现面向对象的继承特性和模板设计模式等等。 不过，并不是所有的面向对象编程语言都支持这两个语法概念，比如，C++ 这种编程语言只支持抽象类，不支持接口；而像 Python 这样的动态编程语言，既不支持抽象类，也不支持接口。尽管有些编程语言没有提供现成的语法来支持接口和抽象类，我们仍然可以通过一些手段来模拟实现这两个语法概念。","head":[["meta",{"property":"og:url","content":"https://theme-zhang.netlify.app/zh/basics/OOP/%E6%8E%A5%E5%8F%A3-%E6%8A%BD%E8%B1%A1%E7%B1%BB.html"}],["meta",{"property":"og:site_name","content":"zhang"}],["meta",{"property":"og:title","content":"接口vs抽象类的区别？如何用普通的类模拟抽象类和接口？"}],["meta",{"property":"og:description","content":"接口vs抽象类的区别？如何用普通的类模拟抽象类和接口？ 在面向对象编程中，抽象类和接口是两个经常被用到的语法概念，是面向对象四大特性，以及很多设计模式、设计思想、设计原则编程实现的基础。比如，我们可以使用接口来实现面向对象的抽象特性、多态特性和基于接口而非实现的设计原则，使用抽象类来实现面向对象的继承特性和模板设计模式等等。 不过，并不是所有的面向对象编程语言都支持这两个语法概念，比如，C++ 这种编程语言只支持抽象类，不支持接口；而像 Python 这样的动态编程语言，既不支持抽象类，也不支持接口。尽管有些编程语言没有提供现成的语法来支持接口和抽象类，我们仍然可以通过一些手段来模拟实现这两个语法概念。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-12-09T06:04:07.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"article:modified_time","content":"2022-12-09T06:04:07.000Z"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://theme-zhang.netlify.app/en/basics/OOP/%E6%8E%A5%E5%8F%A3-%E6%8A%BD%E8%B1%A1%E7%B1%BB.html"}]]},"headers":[{"level":2,"title":"什么是抽象类和接口？区别在哪里？","slug":"什么是抽象类和接口-区别在哪里","link":"#什么是抽象类和接口-区别在哪里","children":[]},{"level":2,"title":"抽象类和接口能解决什么编程问题？","slug":"抽象类和接口能解决什么编程问题","link":"#抽象类和接口能解决什么编程问题","children":[]},{"level":2,"title":"如何模拟抽象类和接口两个语法概念？","slug":"如何模拟抽象类和接口两个语法概念","link":"#如何模拟抽象类和接口两个语法概念","children":[]},{"level":2,"title":"如何决定该用抽象类还是接口？","slug":"如何决定该用抽象类还是接口","link":"#如何决定该用抽象类还是接口","children":[]},{"level":2,"title":"重点回顾","slug":"重点回顾","link":"#重点回顾","children":[]},{"level":2,"title":"课堂讨论","slug":"课堂讨论","link":"#课堂讨论","children":[]}],"git":{"createdTime":1670565847000,"updatedTime":1670565847000,"contributors":[{"name":"zhanglf","email":"454486214@qq.com","commits":1}]},"readingTime":{"minutes":16.74,"words":5022},"filePathRelative":"zh/basics/OOP/接口-抽象类.md","localizedDate":"2022年12月9日","excerpt":"<h1> 接口vs抽象类的区别？如何用普通的类模拟抽象类和接口？</h1>\\n<p>在面向对象编程中，抽象类和接口是两个经常被用到的语法概念，是面向对象四大特性，以及很多设计模式、设计思想、设计原则编程实现的基础。比如，我们可以使用接口来实现面向对象的抽象特性、多态特性和基于接口而非实现的设计原则，使用抽象类来实现面向对象的继承特性和模板设计模式等等。</p>\\n<p>不过，并不是所有的面向对象编程语言都支持这两个语法概念，比如，C++ 这种编程语言只支持抽象类，不支持接口；而像 Python 这样的动态编程语言，既不支持抽象类，也不支持接口。尽管有些编程语言没有提供现成的语法来支持接口和抽象类，我们仍然可以通过一些手段来模拟实现这两个语法概念。</p>","autoDesc":true}');export{e as data};
