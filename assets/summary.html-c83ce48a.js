const e=JSON.parse('{"key":"v-7c5c45fb","path":"/zh/language/Java/JVM/compile/summary.html","title":"原子类","lang":"zh-CN","frontmatter":{"category":["Java"],"description":"原子类 提示 Java代码的执行效率真的比C++等编译型语言低吗？ 从本节开始，我们进入专栏的JVM模块。JVM模块分四部分讲解，它们分别是：编译执行、内存模型、垃圾回收、JVM实战。 在专栏的第一节中，我们讲到，高级语言可以粗略的分为三类：编译型语言、解释型语言、混合型语言，其中，Java属于混合型语言。混合型语言也叫做半解释型语言，它融合了编译型语言和解释型语言的特点，既兼顾了可移植性，又兼顾了执行效率。本节，我们就先粗略介绍一下Java的编译执行的整个过程，其中就包括前端编译、类加载、解释执行、JIT编译执行、AOT编译这5部分内容。在后面的几节中，我们对其中较复杂的类加载、JIT编译再进行详细讲解。 img 我们经常听说，Java语言的执行效率没有C/C++语言高，为什么这么说呢？这样的说法是否是事实呢？带着这些问题，我们开始今天的学习。","head":[["meta",{"property":"og:url","content":"https://theme-zhang.netlify.app/zh/language/Java/JVM/compile/summary.html"}],["meta",{"property":"og:site_name","content":"zhang"}],["meta",{"property":"og:title","content":"原子类"}],["meta",{"property":"og:description","content":"原子类 提示 Java代码的执行效率真的比C++等编译型语言低吗？ 从本节开始，我们进入专栏的JVM模块。JVM模块分四部分讲解，它们分别是：编译执行、内存模型、垃圾回收、JVM实战。 在专栏的第一节中，我们讲到，高级语言可以粗略的分为三类：编译型语言、解释型语言、混合型语言，其中，Java属于混合型语言。混合型语言也叫做半解释型语言，它融合了编译型语言和解释型语言的特点，既兼顾了可移植性，又兼顾了执行效率。本节，我们就先粗略介绍一下Java的编译执行的整个过程，其中就包括前端编译、类加载、解释执行、JIT编译执行、AOT编译这5部分内容。在后面的几节中，我们对其中较复杂的类加载、JIT编译再进行详细讲解。 img 我们经常听说，Java语言的执行效率没有C/C++语言高，为什么这么说呢？这样的说法是否是事实呢？带着这些问题，我们开始今天的学习。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-12-09T06:04:07.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"article:modified_time","content":"2022-12-09T06:04:07.000Z"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://theme-zhang.netlify.app/en/language/Java/JVM/compile/summary.html"}]]},"headers":[{"level":2,"title":"一、前端编译","slug":"一、前端编译","link":"#一、前端编译","children":[]},{"level":2,"title":"二、类加载","slug":"二、类加载","link":"#二、类加载","children":[]},{"level":2,"title":"三、解释执行","slug":"三、解释执行","link":"#三、解释执行","children":[]},{"level":2,"title":"四、JIT编译","slug":"四、jit编译","link":"#四、jit编译","children":[]},{"level":2,"title":"五、AOT编译","slug":"五、aot编译","link":"#五、aot编译","children":[]},{"level":2,"title":"六、课后思考题","slug":"六、课后思考题","link":"#六、课后思考题","children":[]}],"git":{"createdTime":1670565847000,"updatedTime":1670565847000,"contributors":[{"name":"zhanglf","email":"454486214@qq.com","commits":1}]},"readingTime":{"minutes":11.96,"words":3589},"filePathRelative":"zh/language/Java/JVM/compile/summary.md","localizedDate":"2022年12月9日","excerpt":"<h1> <strong>原子类</strong></h1>\\n<div class=\\"custom-container tip\\">\\n<p class=\\"custom-container-title\\">提示</p>\\n<p><strong>Java代码的执行效率真的比C++等编译型语言低吗？</strong></p>\\n<p>从本节开始，我们进入专栏的JVM模块。JVM模块分四部分讲解，它们分别是：编译执行、内存模型、垃圾回收、JVM实战。</p>\\n<p>在专栏的第一节中，我们讲到，高级语言可以粗略的分为三类：编译型语言、解释型语言、混合型语言，其中，Java属于混合型语言。混合型语言也叫做半解释型语言，它融合了编译型语言和解释型语言的特点，既兼顾了可移植性，又兼顾了执行效率。本节，我们就先粗略介绍一下Java的编译执行的整个过程，其中就包括前端编译、类加载、解释执行、JIT编译执行、AOT编译这5部分内容。在后面的几节中，我们对其中较复杂的类加载、JIT编译再进行详细讲解。</p>\\n<figure><img src=\\"http://wechatapppro-1252524126.file.myqcloud.com/appnvnpyonz2273/image/ueditor/38061500_1663830640.png\\" alt=\\"img\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>img</figcaption></figure>\\n<p>我们经常听说，Java语言的执行效率没有C/C++语言高，为什么这么说呢？这样的说法是否是事实呢？带着这些问题，我们开始今天的学习。</p>\\n</div>","autoDesc":true}');export{e as data};
