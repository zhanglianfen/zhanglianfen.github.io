const e=JSON.parse('{"key":"v-0b80d9ea","path":"/zh/basics/MySQL/%E5%AE%9E%E8%B7%B5%E7%AF%87/16orderby%E6%98%AF%E6%80%8E%E4%B9%88%E5%B7%A5%E4%BD%9C%E7%9A%84.html","title":"“order by”是怎么工作的？","lang":"zh-CN","frontmatter":{"description":"“order by”是怎么工作的？ 在你开发应用的时候，一定会经常碰到需要根据指定的字段排序来显示结果的需求。还是以我们前面举例用过的市民表为例，假设你要查询城市是“杭州”的所有人名字，并且按照姓名排序返回前 1000 个人的姓名、年龄。 假设这个表的部分定义是这样的： CREATE TABLE `t` ( `id` int(11) NOT NULL, `city` varchar(16) NOT NULL, `name` varchar(16) NOT NULL, `age` int(11) NOT NULL, `addr` varchar(128) DEFAULT NULL, PRIMARY KEY (`id`), KEY `city` (`city`) ) ENGINE=InnoDB;","head":[["meta",{"property":"og:url","content":"https://theme-zhang.netlify.app/zh/basics/MySQL/%E5%AE%9E%E8%B7%B5%E7%AF%87/16orderby%E6%98%AF%E6%80%8E%E4%B9%88%E5%B7%A5%E4%BD%9C%E7%9A%84.html"}],["meta",{"property":"og:site_name","content":"zhang"}],["meta",{"property":"og:title","content":"“order by”是怎么工作的？"}],["meta",{"property":"og:description","content":"“order by”是怎么工作的？ 在你开发应用的时候，一定会经常碰到需要根据指定的字段排序来显示结果的需求。还是以我们前面举例用过的市民表为例，假设你要查询城市是“杭州”的所有人名字，并且按照姓名排序返回前 1000 个人的姓名、年龄。 假设这个表的部分定义是这样的： CREATE TABLE `t` ( `id` int(11) NOT NULL, `city` varchar(16) NOT NULL, `name` varchar(16) NOT NULL, `age` int(11) NOT NULL, `addr` varchar(128) DEFAULT NULL, PRIMARY KEY (`id`), KEY `city` (`city`) ) ENGINE=InnoDB;"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-12-09T06:04:07.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"article:modified_time","content":"2022-12-09T06:04:07.000Z"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://theme-zhang.netlify.app/en/basics/MySQL/%E5%AE%9E%E8%B7%B5%E7%AF%87/16orderby%E6%98%AF%E6%80%8E%E4%B9%88%E5%B7%A5%E4%BD%9C%E7%9A%84.html"}]]},"headers":[{"level":2,"title":"全字段排序","slug":"全字段排序","link":"#全字段排序","children":[]},{"level":2,"title":"rowid排序","slug":"rowid排序","link":"#rowid排序","children":[]},{"level":2,"title":"全字段排序 VS rowid 排序","slug":"全字段排序-vs-rowid-排序","link":"#全字段排序-vs-rowid-排序","children":[]},{"level":2,"title":"小结","slug":"小结","link":"#小结","children":[]},{"level":2,"title":"思考题","slug":"思考题","link":"#思考题","children":[]}],"git":{"createdTime":1670565847000,"updatedTime":1670565847000,"contributors":[{"name":"zhanglf","email":"454486214@qq.com","commits":1}]},"readingTime":{"minutes":14.69,"words":4408},"filePathRelative":"zh/basics/MySQL/实践篇/16orderby是怎么工作的.md","localizedDate":"2022年12月9日","excerpt":"<h1> “order by”是怎么工作的？</h1>\\n<p>在你开发应用的时候，一定会经常碰到需要根据指定的字段排序来显示结果的需求。还是以我们前面举例用过的市民表为例，假设你要查询城市是“杭州”的所有人名字，并且按照姓名排序返回前 1000 个人的姓名、年龄。</p>\\n<p>假设这个表的部分定义是这样的：</p>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code>CREATE TABLE `t` (\\n  `id` int(11) NOT NULL,\\n  `city` varchar(16) NOT NULL,\\n  `name` varchar(16) NOT NULL,\\n  `age` int(11) NOT NULL,\\n  `addr` varchar(128) DEFAULT NULL,\\n  PRIMARY KEY (`id`),\\n  KEY `city` (`city`)\\n) ENGINE=InnoDB;\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
