const e=JSON.parse('{"key":"v-4bce9fd6","path":"/zh/language/Java/multithreading/lockless/Atomic.html","title":"原子类","lang":"zh-CN","frontmatter":{"category":["Java"],"description":"原子类：请举例说明CAS的ABA问题是如何产生的以及如何解决？ 上一节，我们讲到多线程开发中的基础中的基础：CAS。自旋+CAS可以替代锁用于资源竞争不激烈的场景。不过，相对于锁来说，自旋+CAS的代码实现比较复杂。我们需要先创建Unsafe对象，然后获取待更新变量的偏移位置，最后调用Unsafe对象的CAS方法来更新变量。为了方便开发，JUC提供了各...","head":[["meta",{"property":"og:url","content":"https://theme-zhang.netlify.app/zh/language/Java/multithreading/lockless/Atomic.html"}],["meta",{"property":"og:site_name","content":"zhang"}],["meta",{"property":"og:title","content":"原子类"}],["meta",{"property":"og:description","content":"原子类：请举例说明CAS的ABA问题是如何产生的以及如何解决？ 上一节，我们讲到多线程开发中的基础中的基础：CAS。自旋+CAS可以替代锁用于资源竞争不激烈的场景。不过，相对于锁来说，自旋+CAS的代码实现比较复杂。我们需要先创建Unsafe对象，然后获取待更新变量的偏移位置，最后调用Unsafe对象的CAS方法来更新变量。为了方便开发，JUC提供了各..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-12-09T06:04:07.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"article:modified_time","content":"2022-12-09T06:04:07.000Z"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://theme-zhang.netlify.app/en/language/Java/multithreading/lockless/Atomic.html"}]]},"excerpt":"","headers":[{"level":2,"title":"一、原子类概述","slug":"一、原子类概述","link":"#一、原子类概述","children":[]},{"level":2,"title":"二、基本类型原子类","slug":"二、基本类型原子类","link":"#二、基本类型原子类","children":[]},{"level":2,"title":"三、引用类型原子类","slug":"三、引用类型原子类","link":"#三、引用类型原子类","children":[]},{"level":2,"title":"四、数组类型原子类","slug":"四、数组类型原子类","link":"#四、数组类型原子类","children":[]},{"level":2,"title":"五、对象属性原子类","slug":"五、对象属性原子类","link":"#五、对象属性原子类","children":[]},{"level":2,"title":"六、课后思考题","slug":"六、课后思考题","link":"#六、课后思考题","children":[]}],"git":{"createdTime":1670565847000,"updatedTime":1670565847000,"contributors":[{"name":"zhanglf","email":"454486214@qq.com","commits":1}]},"readingTime":{"minutes":10.51,"words":3152},"autoDesc":true,"localizedDate":"2022年12月9日","filePathRelative":"zh/language/Java/multithreading/lockless/Atomic.md"}');export{e as data};
