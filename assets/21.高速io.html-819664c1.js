const e=JSON.parse('{"key":"v-92eedaec","path":"/zh/language/Java/basics/io/21.%E9%AB%98%E9%80%9Fio.html","title":"高速I/O（上）","lang":"zh-CN","frontmatter":{"category":["Java IO"],"description":"高速I/O（上） 普通的I/O读写流程都存在哪些性能问题？ 前两节，我们介绍了IO类库和NIO类库，尽管在平时的业务开发中，我们很少会用到它们，但是，对于一些常用中间件、基础系统，比如Kakfa、RocketMQ、MySQL等，其内部实现涉及大量的文件和网络等I/O读写操作。I/O读写是否高效，直接决定了这些中间件和基础系统的性能，是优化的重中之重。I/O读写的优化方式，也是面试中经常被问及的知识点。 关于高速I/O，我们分两节来讲解。本节，我们介绍普通I/O读写的底层实现原理，让你知道I/O读写慢在哪，下一节，我们介绍提高I/O读写速度的方法，让你知道如何让它快。","head":[["meta",{"property":"og:url","content":"https://theme-zhang.netlify.app/zh/language/Java/basics/io/21.%E9%AB%98%E9%80%9Fio.html"}],["meta",{"property":"og:site_name","content":"zhang"}],["meta",{"property":"og:title","content":"高速I/O（上）"}],["meta",{"property":"og:description","content":"高速I/O（上） 普通的I/O读写流程都存在哪些性能问题？ 前两节，我们介绍了IO类库和NIO类库，尽管在平时的业务开发中，我们很少会用到它们，但是，对于一些常用中间件、基础系统，比如Kakfa、RocketMQ、MySQL等，其内部实现涉及大量的文件和网络等I/O读写操作。I/O读写是否高效，直接决定了这些中间件和基础系统的性能，是优化的重中之重。I/O读写的优化方式，也是面试中经常被问及的知识点。 关于高速I/O，我们分两节来讲解。本节，我们介绍普通I/O读写的底层实现原理，让你知道I/O读写慢在哪，下一节，我们介绍提高I/O读写速度的方法，让你知道如何让它快。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-12-09T06:04:07.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"article:modified_time","content":"2022-12-09T06:04:07.000Z"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://theme-zhang.netlify.app/en/language/Java/basics/io/21.%E9%AB%98%E9%80%9Fio.html"}]]},"headers":[{"level":2,"title":"一、用户态和内核态","slug":"一、用户态和内核态","link":"#一、用户态和内核态","children":[]},{"level":2,"title":"二、系统调用与上下文切换","slug":"二、系统调用与上下文切换","link":"#二、系统调用与上下文切换","children":[]},{"level":2,"title":"三、I/O读写的底层实现原理","slug":"三、i-o读写的底层实现原理","link":"#三、i-o读写的底层实现原理","children":[]},{"level":2,"title":"四、CPU减负神器之DMA技术","slug":"四、cpu减负神器之dma技术","link":"#四、cpu减负神器之dma技术","children":[]},{"level":2,"title":"五、课后思考题","slug":"五、课后思考题","link":"#五、课后思考题","children":[]}],"git":{"createdTime":1670565847000,"updatedTime":1670565847000,"contributors":[{"name":"zhanglf","email":"454486214@qq.com","commits":1}]},"readingTime":{"minutes":14.66,"words":4398},"filePathRelative":"zh/language/Java/basics/io/21.高速io.md","localizedDate":"2022年12月9日","excerpt":"<h1> <strong>高速I/O（上）</strong></h1>\\n<blockquote>\\n<p><strong>普通的I/O读写流程都存在哪些性能问题？</strong></p>\\n</blockquote>\\n<p>前两节，我们介绍了IO类库和NIO类库，尽管在平时的业务开发中，我们很少会用到它们，但是，对于一些常用中间件、基础系统，比如Kakfa、RocketMQ、MySQL等，其内部实现涉及大量的文件和网络等I/O读写操作。I/O读写是否高效，直接决定了这些中间件和基础系统的性能，是优化的重中之重。I/O读写的优化方式，也是面试中经常被问及的知识点。</p>\\n<p>关于高速I/O，我们分两节来讲解。本节，我们介绍普通I/O读写的底层实现原理，让你知道I/O读写慢在哪，下一节，我们介绍提高I/O读写速度的方法，让你知道如何让它快。</p>","autoDesc":true}');export{e as data};
